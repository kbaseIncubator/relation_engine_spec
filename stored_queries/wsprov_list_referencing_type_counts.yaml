# Fetch the counts by type of ws_objects that refference an object
# *** if both show_private and show_private are true this will be treated as an OR ***
name: wsprov_list_referencing_type_counts
params:
  type: object
  required: [key]
  properties:
    key:
      type: string
      description: key of the object to start from
    show_private:
      type: boolean
      description: if present, limit to objects in workspaces that a user has access to
    show_public:
      type: boolean
      description: if present, limit to objects in public workspaces
    owners:
      type: array
      items:
        type: string
      description: if present, limit to objects with owner in list
    simplify_type:
      type: boolean
      description: if true, strip out the module and version before collecting
query: |
  WITH wsprov_object
  LET ws_objects = (
      FOR v IN 1..10
          INBOUND CONCAT('wsprov_object/', @key) wsprov_links
          OPTIONS {'uniqueVertices': 'global', 'bfs':true}
          // If both show_private and show_public, return if either is true
          FILTER (@show_private && @show_public) ? (v.is_public || v.workspace_id IN @ws_ids) :
              (!@show_private || v.workspace_id IN @ws_ids) && (!@show_public || v.is_public)
          FILTER (!@owners || v.owner IN @owners)
          return v
  )

  LET types = (
      FOR v in ws_objects
          LET ws_type = @simplify_type ? SPLIT(SPLIT(v.ws_type, '-', 1)[0], '.')[1] : v.ws_type
          COLLECT type = ws_type WITH COUNT INTO type_count
          RETURN {type, type_count}
  )
  LET narrs = (
      FOR v in ws_objects
      RETURN DISTINCT v.narr_name
  )
  RETURN PUSH(types, {'type': 'Narrative', 'type_count': COUNT(narrs)})
